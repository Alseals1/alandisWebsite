name: Deploy

on:
  push:
    branches:
      - main  # Trigger workflow on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js (if using a front-end framework like React, Vue, or Next.js)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16 # Change based on your framework requirements

      # Step 3: Install dependencies and build
      - name: Install dependencies and build
        run: |
          npm install
          npm run build

      # Step 4: Upload build artifacts for later steps
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ./dist  # Replace with your build output folder (e.g., dist, out)

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Run this job after the build job

    steps:
      # Step 1: Download build artifacts
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      # Step 2: Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Update to your AWS region

      # Step 3: Deploy Terraform IaC
      - name: Deploy IaC with Terraform
        run: |
          terraform init
          terraform apply -auto-approve

      # Step 4: Sync website files to S3
      - name: Sync website files to S3
        run: |
          aws s3 sync ./dist s3://your-bucket-name --delete

      # Step 5: Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation --distribution-id YOUR_CLOUDFRONT_DISTRIBUTION_ID --paths "/*"

  smoke-test:
    runs-on: ubuntu-latest
    needs: deploy  # Run this job after the deploy job

    steps:
      # Step 1: Set up Cypress environment
      - name: Install Cypress dependencies
        run: |
          npm install cypress

      # Step 2: Run Cypress tests
      - name: Run Cypress smoke tests
        run: |
          npx cypress run


